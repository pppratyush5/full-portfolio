{"ast":null,"code":"var _jsxFileName = \"/home/pratyush/ReactApp/new repo/full-portfolio/client/full-portfolio/src/projects/Discord app/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectchannelId, selectchannelName } from \"../../features/counter/appSlice\";\nimport db from \"../../firebase\";\nimport firebase from \"firebase\";\nimport \"./Chat.css\";\nimport Message from \"./Message\";\nimport { selectUser } from \"../../features/counter/userSlice\";\nimport send_white from \"../../assets/send_white.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  // const user = useSelector(selectchannelId);\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectchannelId);\n  const channelName = useSelector(selectchannelName);\n  const [input, setInput] = useState([]);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\").onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatHeader__left\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"charHeader__hash\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), channelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatHeader__right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\" // onScroll={() => {\n      //   window.screenY = 800;\n      //   console.log(window.screenY);\n      // }}\n      ,\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(Message, {\n          timestamp: message.timestamp,\n          message: message.message,\n          user: message.user\n        }, message === null || message === void 0 ? void 0 : (_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.seconds, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: send_white,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: !channelId,\n          value: input,\n          onChange: e => {\n            setInput(e.target.value);\n          },\n          type: \"text\",\n          placeholder: `Message ${channelName ? \"#\" + channelName : \"Select Channel\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendMessage,\n          className: \"chat__inputButton\",\n          children: \"send message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"tfiOaZevmeIzW9kceqnLPg6DhlE=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/pratyush/ReactApp/new repo/full-portfolio/client/full-portfolio/src/projects/Discord app/Chat.js"],"names":["useEffect","useState","useSelector","selectchannelId","selectchannelName","db","firebase","Message","selectUser","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","seconds","send_white","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectchannelId,\n  selectchannelName,\n} from \"../../features/counter/appSlice\";\nimport db from \"../../firebase\";\nimport firebase from \"firebase\";\nimport \"./Chat.css\";\nimport Message from \"./Message\";\nimport { selectUser } from \"../../features/counter/userSlice\";\nimport send_white from \"../../assets/send_white.svg\";\n\nconst Chat = () => {\n  // const user = useSelector(selectchannelId);\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectchannelId);\n  const channelName = useSelector(selectchannelName);\n  const [input, setInput] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\")\n        .onSnapshot((snapshot) => {\n          setMessages(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n  }, [channelId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      {/* chat header starts*/}\n      <div className=\"chatHeader\">\n        <div className=\"chatHeader__left\">\n          <h3>\n            <span className=\"charHeader__hash\">#</span>\n            {channelName}\n          </h3>\n        </div>\n        <div className=\"chatHeader__right\">\n          {/* <span className=\"right__icon\">noti icon</span>\n          <span className=\"right__icon\">editlocation icon</span>\n          <span className=\"right__icon\">people alt icon</span>\n          <div className=\"chatHeader__search\">\n            <input placeholder=\"Search\" type=\"text\" />\n          </div>\n          <span className=\"right__icon\">search icon</span>\n          <span className=\"right__icon\">help icon</span> */}\n        </div>\n      </div>\n      {/* chat header ends */}\n\n      <div\n        className=\"chat__messages\"\n        // onScroll={() => {\n        //   window.screenY = 800;\n        //   console.log(window.screenY);\n        // }}\n      >\n        {messages.map((message) => {\n          return (\n            <Message\n              key={message?.timestamp?.seconds}\n              timestamp={message.timestamp}\n              message={message.message}\n              user={message.user}\n            ></Message>\n          );\n        })}\n      </div>\n\n      {/* input starts*/}\n      <div className=\"chat__input\">\n        <img src={send_white} alt=\"\" />\n        <form>\n          <input\n            disabled={!channelId}\n            value={input}\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}\n            type=\"text\"\n            placeholder={`Message ${\n              channelName ? \"#\" + channelName : \"Select Channel\"\n            }`}\n          />\n          <button\n            type=\"submit\"\n            onClick={sendMessage}\n            className=\"chat__inputButton\"\n          >\n            send message\n          </button>\n        </form>\n        <div className=\"chat__inputIcon\">\n          {/* <span>card gift icon</span>\n          <span>GIF</span>\n          <span>smile</span> */}\n        </div>\n      </div>\n      {/* input ends */}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}